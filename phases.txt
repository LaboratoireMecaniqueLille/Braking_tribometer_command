#Init
PID on


# Acceleration:
Hydrau out
broche: speed=..

= Transition: speed >=.95*consigne_speed

# Stabilisation:
Ne rien faire

= Transition: delai = xx secondes

# Freinage:
Hydrau in
(asservissement couple)
speed = cte/simulation inertie (condition)

= Transition: tempo/vitesse <= xx

(#nouveau cycle)

#Fin
Hydrau out
PID off


""""""
Cycles:
  - V cte, F cte
  - V cte, xPatin cte
  - V cte, F asservi couple (P cte)
  - Décéleration/arrêt: V asservie (Simulation inertie), F cte

Subcycles:
  - Acceleration + Stabilisaton:
    Disable PID
    F = 0
    Speed = value
    = while not .95 < speed/target <1.05:
      = Condition .95 < speed/target <1.05
      = condition delay = xx
  - V cte:
    speed = value
    = condition delay
  - Fin:
    V = 0
    F = 0
    = Condition: True
  - VcteFcte:
    enable PID
    F = value
    'Vcte
    = Condition: delay(/temp?)
    disable PID
  - VcteXcte
(Formuler comme Fcte ? => donner F, activer PID, mesurer x, désactiver PID et régler x)
    x=value
    'Vcte
    = Condition: delay(/temp?)
    x=0
  - Vcte,Pcte
    Enable PID (couple)
    'Vcte
    = Condition: delay(/temp?)
    disable PID
  - Deceleration/arret:
    Enable PID

    ---= while v > cond:
    ---  = v -= Pdissipée/I (mesure C)
    = Condition: v < cond (+simu inertie)
    Disable PID
